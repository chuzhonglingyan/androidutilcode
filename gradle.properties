# Project-wide Gradle settings.

# IDE (e.g. Android Studio) users:
# Gradle settings configured through the IDE *will override*
# any settings specified in this file.

# For more details on how to configure your build environment visit
# http://www.gradle.org/docs/current/userguide/build_environment.html

# Specifies the JVM arguments used for the daemon process.
# The setting is particularly useful for tweaking memory settings.
#为gradle守护进程配置jvmargs，可以用于调整gradle构建项目时的可用内存大小 等，这里我们设置了java堆大小为2G
#当你在build的时候 IDE报了类似的错误
#...aapt.exe'' finished with non-zero exit value 1
#你也可以使用这个参数去调整java堆大小，去避免这个错误。
org.gradle.jvmargs=-Xmx2048m
#让Gradle以并行模式去执行task (当你稍微了解Gradle之后，你就会知道Gradle脚本是由任务(task)组成的。而我们使用Gradle去构建项目的时候呢，就相当于要求Gradle去执行若干个构建任务)
org.gradle.parallel=true
#激活新的incubating mode。让Gradle在build大型多项目的时候更快！
org.gradle.configureondemand=true
#当设置了它的时候，你的gradle将会以进程守护的方式运行（简而言之就是一直在后台运行着），这就意味着，gradle进程的资源将会一直存在，随时待命你的build task！我们都知道，创建进程是一个很耗时的过程。
#setting.org.gradle.daemon=true
#当你配置了这个参数的参数的时候，Gradle会以相应数目的线程去构建项目，当然速度会嗖嗖的！
#但这个参数我没有用到，因为电脑实在太渣了！！并不敢弄多线程！
org.gradle.workers.max=2

#优化的command line
gradlew app:assembleDebug -x lint --configure-on-demand --daemon --parallel --profile
#实际上就是将gradle.properties中的优化选项作为参数写进了command line中。可我们可以看出，在console中去build，无论如何都比在IDE中build快。 而且不只一点点。

// 示例值， 仅供参考
bintray.user=yutianyulei // your bintray user name
bintray.apikey=3c61cd3362e2e95df51a587c24f26622d2c0c2fd // your bintray api key